<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hackernewsclone on CoTutorial</title>
    <link>https://cotutorial.github.io/series/hackernewsclone/</link>
    <description>Recent content in hackernewsclone on CoTutorial</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <lastBuildDate>Mon, 19 Mar 2018 16:24:13 +0000</lastBuildDate>
    
	<atom:link href="https://cotutorial.github.io/series/hackernewsclone/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Part 1 - Setting Up Our VueJS Project</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-1-setting-up-vuejs-project/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-1-setting-up-vuejs-project/</guid>
      <description>In this first tutorial, we will be covering exactly how you set up your development machine so that we can start working on our HackerNews clone.
We&amp;rsquo;ll get a basic VueJS application up and running and we&amp;rsquo;ll also cover how you can build this simple project so that you end up with files that are deployable to the likes of and S3 bucket, or a server that can serve your files.</description>
    </item>
    
    <item>
      <title>Part 2 - Creating a Few Components</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-2-creating-few-components/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-2-creating-few-components/</guid>
      <description>In the previous tutorial, we not only managed to set up our base project and get it running on http://localhost:8080, but we also managed to build it so that it&amp;rsquo;s ready for deployment to production. We now have a strong base project from which we can build up up our HackerNews clone.
In this tutorial, we are going to create our first Single Page component which will be our Navbar.</description>
    </item>
    
    <item>
      <title>Part 3 - Adding a Few Routes To Our App</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-3-adding-a-few-routes/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-3-adding-a-few-routes/</guid>
      <description>In the previous tutorial of this series, we covered single page components and how you could build your own components and subsequently render them within your Vue.js application. We created a simple Navbar component and registered it within our App.vue component and subsequently rendered it within our application.
In this tutorial, we are going to be creating a few more single-page components and setting up a vue-router so that we can navigate between different views on our site.</description>
    </item>
    
    <item>
      <title>Part 4 - Hitting The HackerNews API</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-4-hitting-an-api/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-4-hitting-an-api/</guid>
      <description>The documentation for the API we will be hitting can be found here: HackerNews/API
 In most frontend web applications, you will need to start making HTTP requests in order to retrieve data from a database or get information from a RESTful API. Being able to do this is considered almost essential these days and thus, in this section of the course, we are going to look at how you can extend the HackerNews project in order to make HTTP requests out to the HackerNews API.</description>
    </item>
    
    <item>
      <title>Part 5 - Viewing Individual News Articles</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-5-single-news-article-view/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-5-single-news-article-view/</guid>
      <description>In the previous tutorial, we looked at how we could show all of the latest HackerNews stories on our Homepage component and showed information like the score and the URL of that story. Whilst this is pretty cool, it doesn&amp;rsquo;t let us see the discussion going on around any of the stories, as we all know, this can be the best bit!
In this tutorial, we&amp;rsquo;ll be adding a new route to our VueJS application which will be able to render an individual story and the comments associated with it.</description>
    </item>
    
    <item>
      <title>Part 6 - Advanced Components</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-6-advanced-components/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-6-advanced-components/</guid>
      <description>As we continue to build this HackerNews clone up, the code within some of our components is going to increasingly grow. We need to start splitting our application up into multiple smaller components and in order for us to do this, we&amp;rsquo;ll first have to learn some new concepts such as passing data into components using props.
Video Tutorial  In this tutorial, we are going to create an Item.</description>
    </item>
    
    <item>
      <title>Part 7 - Managing State with Vuex in your VueJS Applications</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-7-managing-state-with-vuex-vuejs/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-7-managing-state-with-vuex-vuejs/</guid>
      <description>In this tutorial, we are going to be adding Vuex to our VueJS application. We&amp;rsquo;ll be looking at how we can improve the performance of our application and persist data between route changes.
Why Vuex? Vuex is a state management pattern + library for Vue.js applications. Essentially, it acts as a centralized store for all components in an application.
Vuex Core Concepts Before we continue to flesh out our VueJS application, we should really ground ourselves with the core concepts of Vuex.</description>
    </item>
    
    <item>
      <title>Part 8 - Deploying Our HackerNews Client To AWS</title>
      <link>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-8-deploying-our-application/</link>
      <pubDate>Mon, 19 Mar 2018 16:24:13 +0000</pubDate>
      
      <guid>https://cotutorial.github.io/projects/hacker-news-clone-vuejs/part-8-deploying-our-application/</guid>
      <description>In this final lesson in the series, we are going to be taking a look at how you can deploy your finished application up to AWS so that it is available for the world.
We&amp;rsquo;ll cover how to do this in an automated fashion using the Travis-CI platform and we&amp;rsquo;ll also cover some of the various methods of improving performance using services such as CloudFront.
Setting up a CI/CD Pipeline Now that we have a basic level of functionality within our application, it makes sense to deploy it, have our users see it, and interact with it and hopefully provide feedback on it as soon as possible.</description>
    </item>
    
  </channel>
</rss>