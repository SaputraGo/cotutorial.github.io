<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generals on My New Hugo Site</title>
    <link>http://example.org/general/</link>
    <description>Recent content in Generals on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Nov 2017 20:18:29 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/general/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Top Books For Intermediate Level Programmers</title>
      <link>http://example.org/general/top-books-for-intermediate-programmers/</link>
      <pubDate>Tue, 28 Nov 2017 20:18:29 +0000</pubDate>
      
      <guid>http://example.org/general/top-books-for-intermediate-programmers/</guid>
      <description>This list is currently under construction, if you know of any books that are potentially missing from this list then please let me know in the comments section below!
 In this article we will be looking at some of the very top books you can buy as an intermediate level programmer to improve your skills and become a true master of your craft.
Code Complete: A Practical Handbook of Software Construction (2nd Edition) This is without a doubt one of the best practical guides that any budding programmer should be reading in order to top up their programming skills.</description>
    </item>
    
    <item>
      <title>The Top Programming Books for Beginners</title>
      <link>http://example.org/general/top-beginner-programming-books/</link>
      <pubDate>Tue, 28 Nov 2017 18:04:33 +0000</pubDate>
      
      <guid>http://example.org/general/top-beginner-programming-books/</guid>
      <description>In this article we will be looking at the best books you can buy to help you learn the basics of computer programming.
Code Complete: 2 This is without a doubt one of the best practical guides that any budding programmer should be reading in order to top up their programming skills. This book contains a massive number of practical points that touch upon a wide range of different topics.</description>
    </item>
    
    <item>
      <title>RESTful API Design - Best Practices</title>
      <link>http://example.org/general/rest-api-best-practices/</link>
      <pubDate>Mon, 12 Jun 2017 15:29:30 +0100</pubDate>
      
      <guid>http://example.org/general/rest-api-best-practices/</guid>
      <description>In this article we look at some of the key concepts that everyone should bear in mind when designing RESTful APIs. These are based off my own experience with designing and building RESTful APIs in a number of projects and should be taken with a pinch of salt, I am in no way telling you that you must do it this way. I am merely
Versioning Versioning is incredibly important in pretty much every scenario, be it a personal project or an enterprise scale service that other teams will be interfacing with.</description>
    </item>
    
    <item>
      <title>Learning to Code in 2017</title>
      <link>http://example.org/general/learning-to-code-2017/</link>
      <pubDate>Sat, 15 Apr 2017 09:53:07 +0100</pubDate>
      
      <guid>http://example.org/general/learning-to-code-2017/</guid>
      <description>Programming has changed a hell of a lot in the last few years and we’ve seen multiple new languages pop up all addressing different problem sets and skill levels. The main goal for this article is clarifying some of the basic concepts and guiding you as to where to start if you are wanting to learn how to program in 2017.
Choosing a Language There are literally hundreds of languages out there, from C++ to Python to Go.</description>
    </item>
    
    <item>
      <title>What is a RESTful API?</title>
      <link>http://example.org/general/what-is-a-rest-api/</link>
      <pubDate>Sat, 15 Apr 2017 09:53:07 +0100</pubDate>
      
      <guid>http://example.org/general/what-is-a-rest-api/</guid>
      <description>As a developer I spend a lot of time developing new or improving on existing RESTful APIs and one of the big questions I’ve been asked is - What is a REST API?
This tutorial will try to explain in layman’s terms what a REST API is and how we can utilize these APIs in order to build our own systems.
REST Basics REST - Representational State Transfer.
API - Application Programming Interface</description>
    </item>
    
    <item>
      <title>Building Software using A Microservice Based Architecture</title>
      <link>http://example.org/general/building-software-using-microservice-architecture/</link>
      <pubDate>Sun, 09 Apr 2017 21:27:23 +0100</pubDate>
      
      <guid>http://example.org/general/building-software-using-microservice-architecture/</guid>
      <description>In this tutorial I’m going to be showing an example of how you could go about building your own software following a microservice based architecture.
I’m going to be discussing key things such as communication between services, asynchronous vs synchronous and most importantly managing your services. I’m going to be writing everything using Google’s Go(GoLang) programming language but these concepts will be transferable across to other language domains.
Why Should We Use Microservice Based Architecture?</description>
    </item>
    
  </channel>
</rss>